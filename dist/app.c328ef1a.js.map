{"version":3,"sources":["szyfrcezara.js","app.js"],"names":["caesar13","sentence","alphabet","rot","Error","encrypted","map","char","includes","indexOf","length","toUpperCase","toLowerCase","join","input","document","querySelector","output","encryptButton","copyButton","addEventListener","innerHTML","value","classList","add"],"mappings":";;ACAA;;AAEA,IAAMc,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,mBAAvB,CAAd;AACA,IAAMC,MAAM,GAAGF,QAAQ,CAACC,aAAT,CAAuB,oBAAvB,CAAf;AACA,IAAME,aAAa,GAAGH,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAAtB;AACA,IAAMG,UAAU,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAnB;AAEAE,aAAa,CAACE,gBAAd,CAA+B,OAA/B,EAAwC,YAAM;AAC5CH,EAAAA,MAAM,CAACI,SAAP,GAAmB,2BAASP,KAAK,CAACQ,KAAf,CAAnB;AACAL,EAAAA,MAAM,CAACM,SAAP,CAAiBC,GAAjB,CAAqB,MAArB;AACD,CAHD;;;;;;;;ADPO,SAASxB,QAAT,CAAkBC,QAAlB,EAA4B;AAC/B,MAAMC,QAAQ,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,EAA6B,GAA7B,EAAiC,GAAjC,EAAqC,GAArC,EAAyC,GAAzC,EAA6C,GAA7C,EAAiD,GAAjD,EAAqD,GAArD,EAAyD,GAAzD,EAA6D,GAA7D,EAAiE,GAAjE,EAAqE,GAArE,EAAyE,GAAzE,EAA6E,GAA7E,EAAiF,GAAjF,EAAqF,GAArF,EAAyF,GAAzF,EAA6F,GAA7F,EAAiG,GAAjG,EAAqG,GAArG,CAAjB;AACA,MAAMC,GAAG,GAAG,EAAZ;;AACA,MAAI,OAAOF,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,KAAK,EAAjD,EAAqD;AACjD,UAAM,IAAIG,KAAJ,CAAU,uCAAV,CAAN;AACH;;AACD,MAAMC,SAAS,GAAG,mBAAIJ,QAAJ,EAAcK,GAAd,CAAkB,UAAAC,IAAI,EAAG;AACvC,QAAIL,QAAQ,CAACM,QAAT,CAAkBD,IAAlB,CAAJ,EAA6B;AACzBA,MAAAA,IAAI,GAAGL,QAAQ,CAAC,CAAEA,QAAQ,CAACO,OAAT,CAAiBF,IAAjB,CAAD,GAAyBJ,GAA1B,IAA+BD,QAAQ,CAACQ,MAAzC,CAAf;AACH,KAFD,MAEO,IAAIR,QAAQ,CAACM,QAAT,CAAkBD,IAAI,CAACI,WAAL,EAAlB,CAAJ,EAA2C;AAC9CJ,MAAAA,IAAI,GAAGL,QAAQ,CAAC,CAAEA,QAAQ,CAACO,OAAT,CAAiBF,IAAI,CAACI,WAAL,EAAjB,CAAD,GAAuCR,GAAxC,IAA6CD,QAAQ,CAACQ,MAAvD,CAAR,CAAuEE,WAAvE,EAAP;AACH;;AACD,WAAOL,IAAP;AACH,GAPiB,CAAlB;;AAQA,SAAOF,SAAS,CAACQ,IAAV,CAAe,EAAf,CAAP;AACH","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["export function caesar13(sentence) {\r\n    const alphabet = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];\r\n    const rot = 13;\r\n    if (typeof sentence !== 'string' || sentence === '') {\r\n        throw new Error('please provide a string of characters')\r\n    }\r\n    const encrypted = [...sentence].map(char=> {\r\n        if (alphabet.includes(char)) {\r\n            char = alphabet[((alphabet.indexOf(char))+rot)%alphabet.length]\r\n        } else if (alphabet.includes(char.toUpperCase())) {\r\n            char = alphabet[((alphabet.indexOf(char.toUpperCase()))+rot)%alphabet.length].toLowerCase()\r\n        }\r\n        return char\r\n    });\r\n    return encrypted.join('')\r\n}\r\n\r\n","import { caesar13 } from './szyfrcezara.js';\r\n\r\nconst input = document.querySelector('.encryptor__input');\r\nconst output = document.querySelector('.encryptor__output');\r\nconst encryptButton = document.querySelector('.encrypt--js');\r\nconst copyButton = document.querySelector('.copy--js');\r\n\r\nencryptButton.addEventListener('click', () => {\r\n  output.innerHTML = caesar13(input.value);\r\n  output.classList.add('show');\r\n});\r\n"]}